buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

repositories {
    mavenCentral()
}

tasks.bootJar {
    enabled = false
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group 'com.ch'
    sourceCompatibility = 17
    targetCompatibility = 17
    compileJava.options.encoding = 'UTF-8'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaCompile){
        options.encoding = 'UTF-8'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-tomcat'

        // Redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.redisson:redisson-spring-boot-starter:3.27.0'

        // Querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

        implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
        implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.0.0'
        implementation group: 'org.json', name: 'json', version: '20220924'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // H2
        runtimeOnly 'com.h2database:h2'

        // jpa query log
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

        // open api spring doc
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

    }

    test {
        useJUnitPlatform()
    }
}

project(':ch-core') {

    bootJar.enabled = false
    jar.enabled = true

    dependencies {}
}

project(':ch-tictoc') {
    dependencies {
        implementation project(':ch-core')

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'
    }
}